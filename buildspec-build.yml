version: 0.2

phases:

  pre_build:
    commands:
      - export ACCESS_KEY_ID=$(aws ssm get-parameter --name "/ACCESS_KEY_ID" --with-decryption --query "Parameter.Value" --output text)
      - echo "Retrieved ACCESS_KEY_ID: $ACCESS_KEY_ID"
      - export ACCESS_KEY_ID=$(aws ssm get-parameter --name "/SECRET_ACCESS_KEY" --with-decryption --query "Parameter.Value" --output text)
      - echo "Retrieved ACCESS_KEY_ID: $ACCESS_KEY_ID"

  install:
    runtime-versions:
      python: 3.9
    commands:
      - npm -v
      - node -v
      #install Node.js packages 
      #--no-progess, disable the display of a progress bar during the installation
      #--silent, suppress informational messages during installation
      - npm install --no-progress -g serverless@3.35.2 --silent
      - npm install --save-dev serverless-python-requirements --silent
      - npm install --save-dev serverless-iam-roles-per-function --silent
      ##-qq same as --silent
      - apt-get update -qq && apt install python3-pip -y -qq && apt install python3-venv -y -qq && apt install python3-dev -y -qq && apt install python3-virtualenv -y -qq
      - pip install pipx --quiet
      - pipx install poetry 
      # Add poetry executable to the PATH
      - export PATH=$PATH:/root/.local/bin
      # Verify that poetry is now accessible in the PATH
      - poetry --version
      - poetry self add poetry-plugin-export

  build:
    commands:
      - which python
      - python --version
      - poetry export --without-hashes -f requirements.txt -o requirements.txt --with-credentials
      - mkdir -p target/stg
      # - export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
      # - export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
      - serverless package --package target/stg --stage stg -r ap-southeast-2 --verbose

artifacts:
  files:
    - target/**/*
    - serverless.yml
    - buildspec-deploy.yml
  